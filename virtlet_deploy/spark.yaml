# Copyright (C) 2017 XLAB, Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Master node (OSv)
#

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: spark-master
spec:
  replicas: 1
  template:
    metadata:
      name: spark-master
      labels:
        case: spark-master
      annotations:
        kubernetes.io/target-runtime: virtlet.cloud
        VirtletDiskDriver: virtio
        VirtletCloudInitUserDataScript: |
          run:
            - POST: /env/PORT
              val: 7077
            - POST: /env/UIPORT
              val: 8080
            - PUT: /app/
              command: "runscript /run/master"
    spec:
      affinity: {"nodeAffinity": {"requiredDuringSchedulingIgnoredDuringExecution": {"nodeSelectorTerms": [{"matchExpressions": [{"key": "extraRuntime", "operator": "In", "values": ["virtlet"]}]}]}}}
      containers:
        - name: spark-master
          image: virtlet.cloud/s3.amazonaws.com/osv-microservice-demo/spark.qemu
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 1024Mi
          ports:
          - name: app-port
            containerPort: 7077

---

#
# k8s Service for Master node to make Master addressible as "spark-master.default"
#

apiVersion: v1
kind: Service
metadata:
  name: spark-master
  namespace: default
spec:
  type: ClusterIP
  selector:
    case: spark-master
  ports:
  - protocol: TCP
    port: 7077
    targetPort: app-port

---

#
# Worker node (OSv)
#

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: spark-worker
spec:
  replicas: 2
  template:
    metadata:
      name: spark-worker
      labels:
        case: spark-worker
      annotations:
        kubernetes.io/target-runtime: virtlet.cloud
        VirtletDiskDriver: virtio
        VirtletCloudInitUserDataScript: |
          run:
            - POST: /env/MASTER
              val: spark-master.default.svc.cluster.local:7077
            - PUT: /app/
              command: "runscript /run/worker"
    spec:
      affinity: {"nodeAffinity": {"requiredDuringSchedulingIgnoredDuringExecution": {"nodeSelectorTerms": [{"matchExpressions": [{"key": "extraRuntime", "operator": "In", "values": ["virtlet"]}]}]}}}
      containers:
        - name: spark-worker
          image: virtlet.cloud/s3.amazonaws.com/osv-microservice-demo/spark.qemu
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 3000Mi

---

#
# Driver node (Docker container)
#

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: spark-driver
spec:
  replicas: 1
  template:
    metadata:
      name: spark-driver
      labels:
        case: spark-driver
    spec:
      containers:
        - name: spark-driver
          image: mikelangelo/spark-driver
          imagePullPolicy : IfNotPresent
